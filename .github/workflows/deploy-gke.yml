name: Deploy to GKE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: my-flask-cluster
  GKE_REGION: us-central1
  DEPLOYMENT_NAME: flask-app
  REPOSITORY: flask-repo
  IMAGE: flask-app

jobs:
  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # 使用 OIDC 認證 GCP
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    # 配置 Docker 認證
    - name: Configure Docker
      run: gcloud auth configure-docker us-central1-docker.pkg.dev

    # 建立 Docker image
    - name: Build Docker image
      run: |
        docker build -t us-central1-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA .

    # 推送到 Artifact Registry
    - name: Push to Artifact Registry
      run: |
        docker push us-central1-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA

    # 獲取 GKE 憑證
    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_REGION

    # 使用 Kustomize 部署
    - name: Deploy to GKE
      run: |
        cd k8s
        kustomize edit set image us-central1-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE=us-central1-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

